% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rmst.pred.R
\name{rmst.pred}
\alias{rmst.pred}
\title{Evaluating predictions of a Restricted Mean Survival Time estimator}
\usage{
rmst.pred(
  x,
  t,
  d,
  tau,
  train.fun,
  predict.fun,
  w = NULL,
  cens.model = "km",
  CV = T,
  n.folds = 10,
  prop = 0.1,
  active.fun = NULL,
  alpha = 0.1,
  rho = 0.5,
  vars = 0,
  bonf.correct = FALSE,
  mad.train.fun = NULL,
  mad.predict.fun = NULL,
  split = NULL,
  seed = NULL,
  out.roo.surv = NULL,
  verbose = FALSE,
  error = T,
  roo = T,
  vimpL = T,
  vimpG = T
)
}
\arguments{
\item{x}{Matrix of variables, of dimension (say) n x p.}

\item{t}{Vector of responses (observed times), of length (say) n.}

\item{d}{Vector of responses (censoring indicator), of length (say) n.}

\item{tau}{Horizon of time.}

\item{train.fun}{A function to perform model training, i.e., to produce an
estimator of E(min(T*,tau)|X), the conditional expectation of the true 
event time T* given features X. Its input arguments should be x: matrix of 
features, t: vector of observed times, d: vector of censoring indicators
and tau: horizon of time. train.fun can be a function performing model 
training for several (say m) learning models.}

\item{predict.fun}{A function to perform prediction for the (mean of the)
responses at new feature values. Its input arguments should be out: output
produced by train.fun, and newx: feature values at which we want to make
predictions.}

\item{w}{Censoring weights. This should be a vector of length n. Default is 
NULL, in which case censoring weights are computed using the censoring 
model specified by the parameter cens.model, or by default with the 
Kaplan-Meier model.}

\item{cens.model}{Model used to estimate the censoring survival function.
This should be equal to "km", "rsf" or "cox" (respectively Kaplan-Meier, 
Random Survival Forests or Cox). Default is "km".}

\item{CV}{Boolean indicating whether or not to perform cross-validation for
the estimation of the mean squared error. Default is TRUE.}

\item{n.folds}{The number of folds for the cross-validated estimation of the
mean squared error. The default number is 10 folds.}

\item{prop}{Proportion of data to put in the test set in case cross-
validation is not performed. If prop=0 then the whole data set is used 
both as training set and test set.}

\item{active.fun}{A function which takes the output of train.fun, and reports
which features are active for each fitted model contained in this output.
Its only input argument should be out: output produced by train.fun.}

\item{alpha}{Miscoverage level for the prediction intervals, i.e., intervals
with coverage 1-alpha are formed. Default for alpha is 0.1.}

\item{vars}{A list specifying the variables (indices between 1 and p)
for which variable importance should be investigated. Alternatively, if
set equal to 0, the default, then all variables are investigated.}

\item{bonf.correct}{Should a Bonferroni correction be applied to the p-values
and confidence intervals? Default is FALSE.}

\item{mad.train.fun}{A function to perform training on the observed absolute 
residuals R = |min(T,tau) - m(X)| and their associated censoring weights,  
where m denotes the estimator produced by train.fun, to estimate E(R*|X)
for the true absolute residual denoted R*.
This is used to scale the conformal score, to produce a prediction interval
with varying local width. The input arguments to mad.train.fun should be
x: matrix of features, y: vector of observed absolute residuals, and w: 
censoring weights. The default for mad.train.fun is NULL, which means that 
no training is done on the absolute residuals, and the usual (unscaled) 
conformal score is used. Note that if mad.train.fun is non-NULL, then so 
must be mad.predict.fun (see next).}

\item{mad.predict.fun}{A function to perform prediction for the (mean of the)
absolute residuals at new feature values. Its input arguments should be
out: output produced by mad.train.fun, and newx: feature values at which we
want to make predictions. The default for mad.predict.fun is NULL, which
means that no local scaling is done for the conformal score, i.e., the
usual (unscaled) conformal score is used.}

\item{split}{Indices that define the data-split to be used (i.e., the indices
define the first half of the data-split). Note that this split is common
to conformal.pred.roo.surv (whether already run, or to be run inter-
nally, see below), loco.roo.surv and loco.surv.
Default is NULL, in which case the split is chosen randomly.}

\item{seed}{Integer to be passed to set.seed. Default is NULL, which 
effectively sets no seed.}

\item{out.roo.surv}{Output from running conformal.pred.roo.surv on the given
data set; default is NULL, which means that conformal.pred.roo.surv will be  
run internally in order to compute in-sample prediction intervals. If  
is NULL, then the data-split common to conformal.pred.roo.surv and this 
out.roo.surv function will be determined by the split or seed arguments. If  
non-NULL, then the common data-split will be determined by that recorded in  
out.roo.surv, and the split argument will be (silently) ignored.}

\item{verbose}{Should intermediate progress be printed out? Default is FALSE.}

\item{error}{Boolean indicating whether or not to estimate the mean squared 
error. Default is TRUE.}

\item{roo}{Boolean indicating whether or not to compute in-sample rank-one-
out prediction intervals. Default is TRUE.}

\item{vimpL}{Boolean indicating whether or not to compute local variable
importance. Default is TRUE.}

\item{vimpG}{Boolean indicating whether or not to compute global variable
importance. Default is TRUE.}
}
\value{
A list with the following components: x, split, mse, out.roo.surv, 
  out.loco.roo.surv, out.loco.surv. The matrix of variables x is returned in
  x. The indices used for the half of the data-split are returned in split. 
  mse is a matrix of dimension n.folds x m containing the estimation of the 
  mean squared error using censoring weights on each fold and for each 
  learning model. The last three components are the outputs of respectively
  roo.surv, loco.roo.surv and loco.surv.
}
\description{
Evaluation of a learning algorithm for the restricted mean survival time
trained on right-censored data. Estimation of its mean squared error, 
computation of prediction intervals, and evaluation of (local and global) 
variable importance.
}
\details{
Analysis framework of one or more restricted mean survival time
  estimation model(s). Details are given in the descriptions of functions
  wrss, conformal.pred.roo.surv, loco.roo.surv and loco.surv. The bias of 
  computing residuals on observed censored times is corrected by using 
  censoring weights. Convergence guarantees for global variable importance 
  currently hold only if the Kaplan-Meier estimator is used to compute 
  censoring weights.
}
\references{
See "Distribution-Free Predictive Inference for Regression" by 
  Lei, G'Sell, Rinaldo, Tibshirani, Wasserman (2018) as a reference for 
  conformal prediction. See "A Comprehensive Framework for Evaluating Time to 
  Event Predictions using the Restricted Mean Survival Time" by Cwiling, 
  Perduca, Bouaziz (2023) for the extension to right-censored data.
}
\seealso{
\code{\link{wrss}}, \code{\link{conformal.pred.roo.surv}}, 
  \code{\link{loco.roo.surv}}, \code{\link{loco.surv}}
}
